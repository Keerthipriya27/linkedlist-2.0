# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

from typing import Optional

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # Create a dummy node to simplify building the result list
        dummy = ListNode()
        tail = dummy

        # Traverse both lists while both have nodes
        while list1 and list2:
            if list1.val < list2.val:
                tail.next = list1
                list1 = list1.next
            else:
                tail.next = list2
                list2 = list2.next
            tail = tail.next  # move tail forward

        # Attach the remaining nodes (if any)
        if list1:
            tail.next = list1
        elif list2:
            tail.next = list2

        # Return the merged list (skipping dummy node)
        return dummy.next
 
